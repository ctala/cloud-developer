service:
  name: serverless-todo-app

plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x

  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-west-2'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        # - dynamodb: DeleteItem
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.dynamoTableTodos}
    - Effect: Allow
      Action:
       - dynamodb:Query
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.dynamoTableTodos}/index/userId-timestamp-index
  environment:
    TODOS_TABLE: ${self:custom.dynamoTableTodos}


package:
 individually: true

functions:
  Auth:
    handler: src/lambda/auth/rs256Auth0Authorizer.handler

  # TODO: Configure this function
  GetTodos:
    handler: src/lambda/http/getTodos.handler
    events:
      - http:
          method: get
          authorizer: Auth
          path: todos
          cors: true

  # TODO: Configure this function
  CreateTodo:
    handler: src/lambda/http/createTodo.handler
    events:
      - http:
          method: post
          path: todos
          authorizer: Auth

  # TODO: Configure this function
  UpdateTodo:
    handler: src/lambda/http/updateTodo.handler
    events:
      - http:
          method: patch
          path: todos/{todoId}
          authorizer: Auth

  # TODO: Configure this function
  DeleteTodo:
    handler: src/lambda/http/deleteTodo.handler
    events:
      - http:
          method: delete
          path: todos/{todoId}
          authorizer: Auth

  # TODO: Configure this function
  GenerateUploadUrl:
    handler: src/lambda/http/generateUploadUrl.handler
    events:
      - http:
          method: post
          path: todos/{todoId}/attachment
          authorizer: Auth

resources:
    # TODO: Add any necessary AWS resources
  - ${file(resources/dynamodb-todos.yml)}

custom:

# Databases
## Dynamodb
### Default
  dynamoDBDeletePolicies:
    prod: Retain
    dev: Delete
    local: Delete
    other: Delete
  dynamodb:
    start:
      migrate: true
    stages:
      - dev
### Names
  dynamoTableTodos : Todos-${self:provider.stage}